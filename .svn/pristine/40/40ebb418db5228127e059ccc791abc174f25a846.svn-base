package io.renren.modules.eir.controller;

import com.alibaba.fastjson.JSON;
import com.baomidou.mybatisplus.mapper.EntityWrapper;
import io.renren.common.utils.R;
import io.renren.modules.miniapp.entity.WXUser;
import io.renren.modules.miniapp.service.WXUserService;
import io.renren.modules.miniapp.ws.service.impl.SendMessageTemplateServiceImpl;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import java.util.List;
import java.util.Map;

/**
 * Created by timmy.deng on 2018/11/23.
 */


@RestController
@RequestMapping("app/send")
public class SendMsgController {

    @Autowired
    private SendMessageTemplateServiceImpl sendMessageTemplateService;
    @Autowired
    private WXUserService wxUserService;




    @PostMapping("single")
    public R sendSingle(String msg){

        System.out.println("msg:"+msg);

        try {
            JSON.parseObject(msg,Map.class);
        } catch (Exception e) {

            System.out.println("传入的String不能解析为map");
            return R.ok("传入的String不能解析为map");
        }

        String result = sendMessageTemplateService.SendMessage(msg);

        return R.ok(result);
    }

    @RequestMapping(value = "all",method = RequestMethod.POST)

    public R sendAll(String msg){

        System.out.println("SendMsgController.sendAll");

        try {

            JSON.parseObject(msg,Map.class);
            
        } catch (Exception e) {

            System.out.println("传入的String不能解析为map");
            return R.ok("传入的String不能解析为map");
        }

        int succeed=0;
        int fail=0;

       // StringBuffer buffer = new StringBuffer(msg);


        List<WXUser> list = wxUserService.selectList(new EntityWrapper<>());
        for (WXUser user : list) {
           // if (user.getOpenid().equals("o4K350FEfkY7Pz92DZ-ugglvhIV8")){
            StringBuffer buffer=new StringBuffer(msg.replace("%allUser%",user.getOpenid())); //替换车牌号码
            String result = sendMessageTemplateService.SendMessage(buffer.toString());
            System.out.println("推送的msg:"+msg);
            System.out.println(user.getUserName()+"推送结果: "+result);
            if (result != null && result.contains("\"code\":0")){
                succeed+=1;
            }else {
                fail+=1;
            }

                System.out.println("user.getUserName() = " + user.getUserName());
                System.out.println("result = " + result);
          //  }
        }



        return R.ok("成功推送:"+succeed+",失败推送:"+fail);
    }

}
