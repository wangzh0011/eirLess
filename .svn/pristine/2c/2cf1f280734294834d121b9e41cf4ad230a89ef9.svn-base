package io.renren.modules.miniapp.controller;

import com.alibaba.fastjson.JSON;
import com.baomidou.mybatisplus.mapper.EntityWrapper;
import io.renren.datasources.DataSourceNames;
import io.renren.datasources.annotation.DataSource;
import io.renren.modules.eir.controller.FormIdController;
import io.renren.modules.eir.controller.eirLessController;
import io.renren.modules.eir.until.SendTemplateMessageUtil;
import io.renren.modules.miniapp.entity.LtrSchedule;
import io.renren.modules.miniapp.entity.Order;
import io.renren.modules.miniapp.service.LtrScheduleService;
import io.renren.modules.miniapp.until.MessageTemplateUtils;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;

import javax.annotation.Resource;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@RestController
@RequestMapping("/miniApp")
public class LtrScheduleController {

    @Resource
    private LtrScheduleService ltrScheduleService;

    @Resource
    private MessageTemplateUtils messageTemplateUtils;

    @RequestMapping("/getEta")
    @DataSource(name = DataSourceNames.SECOND)
    public String getEta(String phone){
        List<LtrSchedule> list = ltrScheduleService.selectList(new EntityWrapper<LtrSchedule>().eq("on_bond_tel",phone));
        if(list.size() == 0){
            return "";
        }
        String eta = list.get(0).getEta();
        return eta;
    }

    @RequestMapping("/saveEta")
    @DataSource(name = DataSourceNames.SECOND)
    public boolean saveEta(String eta,String phone){
        LtrSchedule schedule = new LtrSchedule();
        eta = eta.replace("-","").replace(":","").replace(" ","")+"00";
        schedule.setEta(eta);
        //update eta --bargelink
        boolean flag = ltrScheduleService.update(schedule,new EntityWrapper<LtrSchedule>().eq("on_bond_tel",phone));

        return flag;
    }

    @RequestMapping("/saveAta")
    @DataSource(name = DataSourceNames.SECOND)
    public boolean saveAta(String ata,String phone){

        /*Order order = new Order();
        order.setOpenId("oVczl5bppC7pMH8zS4ZtCyux65U8");
        order.setAppointmentTime("");
        order.setPlate("");
        Map map = SendTemplateMessageUtil.sendWxMsg(order, ata, "29vD0dQZt34xqM5GsR5qCIRmaGm12ApW2PrHRsFGiDg", "审核通过", "");
        messageTemplateUtils.sendMessageTemplate(map);*/
        LtrSchedule schedule = new LtrSchedule();
        ata = ata.replace("-","").replace(":","").replace(" ","")+"00";
        schedule.setIAta(ata);
        //update eta --bargelink
        boolean flag = ltrScheduleService.update(schedule,new EntityWrapper<LtrSchedule>().eq("on_bond_tel",phone));
        return flag;
    }

    @RequestMapping("/reSetAta")
    @DataSource(name = DataSourceNames.SECOND)
    public boolean reSetAta(String eta,String ata,String phone){

        return true;
    }

}
