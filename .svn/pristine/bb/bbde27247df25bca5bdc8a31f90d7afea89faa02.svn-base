package io.renren.modules.eir.controller;

import com.baomidou.mybatisplus.mapper.EntityWrapper;
import io.renren.common.utils.PageUtils;
import io.renren.common.utils.R;
import io.renren.modules.eir.until.IssueTypeUtil;
import io.renren.modules.eir.until.SendTemplateMessageUtil;
import io.renren.modules.eir.until.SiteUtil;
import io.renren.modules.eir.until.StatusUtil;
import io.renren.modules.miniapp.entity.YardPlan;
import io.renren.modules.miniapp.service.SuggestService;
import io.renren.modules.miniapp.service.YardPlanService;
import io.renren.modules.miniapp.until.MessageTemplateUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;

import java.util.Map;

@RestController
@RequestMapping("eir/customer")
public class EirCustomerController {

    @Autowired
    private SuggestService suggestService;

    @Autowired
    private YardPlanService yardPlanService;

    @Autowired
    MessageTemplateUtils messageTemplateUtils;

    @RequestMapping("/suggestList")
    public R getSuggestList(@RequestParam Map<String, Object> params){
        return R.ok().put("page", suggestService.queryPage(params));
    }

    @RequestMapping("/yardPlanList")
    public R getYardPlanList(@RequestParam Map<String, Object> params){
        PageUtils page = yardPlanService.queryPage(params);
        for (Object o : page.getList()) {
            YardPlan yard = (YardPlan)o;
            if("other".equals(yard.getIssueType())){
                yard.setIssueType(yard.getIssue());
            }else{
                yard.setIssueType(IssueTypeUtil.transition(yard.getIssueType()));
            }
            yard.setSite(SiteUtil.transition(yard.getSite()));
            yard.setStatus(StatusUtil.transition(yard.getStatus()));
        }
        return R.ok().put("page", page);
    }

    @RequestMapping("/showInfo")
    public R getInfoById(@RequestParam String id){
        YardPlan yard = yardPlanService.selectOne(new EntityWrapper<YardPlan>().like("id",id));
        if("other".equals(yard.getIssueType())){
            yard.setIssueType(yard.getIssue());
        }else{
            yard.setIssueType(IssueTypeUtil.transition(yard.getIssueType()));
        }
        yard.setSite(SiteUtil.transition(yard.getSite()));
        yard.setStatus(StatusUtil.transition(yard.getStatus()));
        return R.ok().put("yard",yard);
    }

    @RequestMapping("/reply")
    public R replyMessage(String id,String remark){
        YardPlan yard = new YardPlan();
        yard.setId(id);
        yard.setRemark(remark);
        if(yardPlanService.updateById(yard)){
            //发送模板消息
//            Map map = SendTemplateMessageUtil.sendWxMsg(order, remark, template_id, "审核通过"+"(预约号: "+id+")", site);
//            String result = messageTemplateUtils.sendMessageTemplate(map);
            return R.ok();
        }
        else return R.error("系统错误");
    }

}
